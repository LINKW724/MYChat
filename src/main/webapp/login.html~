<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>用户登录</title>
  <style>
    /* General Setup */
    * {
      box-sizing: border-box;
    }
    html, body {
      height: 100%;
      margin: 0;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: #f0f2f5;
      padding: 15px;
    }

    /* Form Container */
    .container {
      padding: 40px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      text-align: center;
      width: 100%;
      max-width: 380px;
    }

    /* Typography */
    h2 {
      margin-top: 0;
      margin-bottom: 25px;
      font-size: 24px;
      color: #333;
    }

    /* Form Elements */
    input[type="text"],
    input[type="password"] {
      width: 100%;
      padding: 12px 15px;
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 6px;
      font-size: 16px;
      transition: border-color 0.2s, box-shadow 0.2s;
    }
    input[type="text"]:focus,
    input[type="password"]:focus {
      outline: none;
      border-color: #007bff;
      box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.2);
    }

    button {
      width: 100%;
      padding: 12px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 16px;
      font-weight: bold;
      transition: background-color 0.2s;
    }
    button:hover {
      background-color: #0056b3;
    }
    button:disabled {
      background-color: #a0c7ff;
      cursor: not-allowed;
    }

    /* Links & Feedback Messages */
    .links {
      display: flex;
      justify-content: space-between;
      font-size: 14px;
      margin-top: 20px;
    }
    .links a {
      color: #007bff;
      text-decoration: none;
      transition: color 0.2s;
    }
    .links a:hover {
      text-decoration: underline;
      color: #0056b3;
    }
    .feedback {
      color: #d93025; /* Red for errors */
      font-size: 13px;
      min-height: 18px; /* Give it a fixed height to prevent layout shifts */
      text-align: center;
      margin-bottom: 10px;
      font-weight: bold;
    }
    .success {
      color: #1a73e8; /* Blue for success/info messages */
    }
  </style>
</head>
<body>
<div class="container">
  <h2>聊天室登录</h2>
  <div id="feedback-msg" class="feedback"></div>
  <form id="login-form">
    <input type="text" name="account" placeholder="账号" required>
    <input type="password" name="password" placeholder="密码" required>
    <button type="submit">登录</button>
  </form>
  <div class="links">
    <a href="forgot-password.html">忘记密码？</a>
    <a href="register.html">注册新账号</a>
  </div>
</div>

<script>
  const form = document.getElementById('login-form');
  const feedbackMsg = document.getElementById('feedback-msg');

  // 页面加载时，检查URL参数以显示相应的提示信息
  document.addEventListener('DOMContentLoaded', () => {
    const params = new URLSearchParams(window.location.search);
    if (params.get('registered') === 'true') {
      feedbackMsg.textContent = '注册成功，请登录！';
      feedbackMsg.classList.add('success');
    }
    if (params.get('reset') === 'success') {
      feedbackMsg.textContent = '密码重置成功，请使用新密码登录！';
      feedbackMsg.classList.add('success');
    }
  });

  // 处理表单提交
  form.addEventListener('submit', async (event) => {
    event.preventDefault(); // 阻止表单的默认提交行为
    feedbackMsg.textContent = ''; // 清空之前的提示信息
    feedbackMsg.classList.remove('success'); // 移除成功样式

    const submitButton = form.querySelector('button');
    submitButton.disabled = true;
    submitButton.textContent = '登录中...';

    // 使用URLSearchParams来准备表单数据，这是发送POST请求的标准方式
    const formData = new URLSearchParams(new FormData(form));

    try {
      const response = await fetch('api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: formData
      });

      if (response.ok) { // response.ok 为 true 代表HTTP状态码是 2xx (成功)
        window.location.href = 'main.html'; // 登录成功，跳转到主应用页面
      } else {
        // 如果请求不成功，检查具体的错误状态码
        if (response.status === 409) { // 409 Conflict 代表 "已登录"
          feedbackMsg.textContent = '您已登录';
        } else { // 其他所有错误 (如 401 Unauthorized, 400 Bad Request) 都视为密码错误
          feedbackMsg.textContent = '账号或密码错误！';
        }
      }
    } catch (error) {
      // 处理网络错误等，例如服务器无法访问
      feedbackMsg.textContent = '登录请求失败，请检查网络连接。';
      console.error('Login request failed:', error);
    } finally {
      // 无论成功还是失败，都恢复按钮的状态
      submitButton.disabled = false;
      submitButton.textContent = '登录';
    }
  });
</script>
</body>
</html>